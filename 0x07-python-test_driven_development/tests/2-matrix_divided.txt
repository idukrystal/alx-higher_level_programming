>>> div_matrix = __import__('2-matrix_divided').matrix_divided

>>> matrix_1 = [[4, 8], [16, 12]]
>>> matrix_2 = [[4.0, 8.0], [16.0, 10.0]]

>>> div_matrix(matrix_1, 4)
[[1.0, 2.0], [4.0, 3.0]]

>>> div_matrix(matrix_2, 4)
[[1.0, 2.0], [4.0, 2.5]]

>>> div_matrix(matrix_1, 2.0)
[[2.0, 4.0], [8.0, 6.0]]

>>> div_matrix(matrix_2, 2.0)
[[2.0, 4.0], [8.0, 5.0]]

>>> div_matrix(matrix_1, 0.0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> div_matrix(matrix_2, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_1 = [['book', 'bag'], ['man', 'woman']]
>>> div_matrix(matrix_1, 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> div_matrix(matrix_2, 'map')
Traceback (most recent call last):
TypeError: div must be a number

>>> div_matrix(matrix_1, 'man')
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_1 = [[3, 5], ['man', 6.0]]
>>> div_matrix(matrix_1, 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_1 = [[4.0, 8], [16, 12.0]]
>>> div_matrix(matrix_1, 4.0)
[[1.0, 2.0], [4.0, 3.0]]

>>> div_matrix(matrix_1, 2)
[[2.0, 4.0], [8.0, 6.0]]

>>> matrix_2 = [[4, 3, 2.0], [2.0, 5]]
>>> div_matrix(matrix_2, 2.0)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_1 = 4
>>> div_matrix(matrix_1, 5)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_2 = [[4, 5, 8]]
>>> div_matrix(matrix_2, 4)
[[1.0, 1.25, 2.0]]

>>> matrix_2 = [[]]
>>> div_matrix(matrix_1, 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> div_matrix([[3, 9], [12, 15]], -3)
[[-1.0, -3.0], [-4.0, -5.0]]

>>> div_matrix([[3]], 3)
[[1.0]]
